
# if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
# 	export TERM='gnome-256color';
# elif infocmp xterm-256color >/dev/null 2>&1; then
# 	export TERM='xterm-256color';
# fi;


# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

prompt_prefix=${debian_chroot:+($debian_chroot)}

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
	xterm*) color_prompt=yes;;
	screen*)
		color_prompt=yes
		if [[ -n "$TMUX" ]] ; then
			prompt_prefix="[tmux] $prompt_prefix"
		else
			prompt_prefix="[screen] $prompt_prefix"
		fi
		;;
esac


if [ "$color_prompt" = yes ]; then
	# \h hostname
	# \u user
	# \w working dir (home == ~)
	# \$ a $ if UID == 0 else #
	# \A current 24-time: HH:MM
	# \\ a \
	# \[ begin, \] end of non-printing (control chars)
	#
	# colors: have to be surrounded by: '\[\033[' and 'm\]'
	# (without the ''. These literally are the left and right bracket!)
	#  color codes are as follows, preceeded by a '0;' (dark) (default) or a '1;' (light)
	#  FG and BG NULL: 00 resets
	#  FG: 30 + ... 0: black, 1: red, 2: green, 3: yellow, 4: blue, 5: violet, 6: cyan, 7: white
	#  BG: 40 + ... same
	reset='\[\033[00m\]'
	black='\[\033[1;30m\]'
	red='\[\033[1;31m\]'
	green='\[\033[1;32m\]'
	yellow='\[\033[1;33m\]'
	blue='\[\033[1;34m\]'
	violet='\[\033[1;35m\]'
	cyan='\[\033[1;36m\]'
	white='\[\033[1;37m\]'
	checkmark='\342\234\223'
	crossmark='\342\234\227'

	PS1="\[\033]0;\u@\h: \w\a\]"  # set xterm title to user@host: dir
	PS1+="$black\D{%F %T} "  # date
	PS1+="${prompt_prefix}"  # if set prefix with screen, tmux, chroot
	PS1+="$green\u@\h "  # user@hostname
	PS1+="$blue\w$reset"  # directory

	PS1+=' $(if [[ $? = 0 ]]; then printf "%s" "'$green$checkmark'" ; else printf "%s" "'$red$crossmark'" ; fi)'$reset

	# git prompt
	if [ -f /usr/local/etc/bash_completion.d/git-prompt.sh ] ; then
		GIT_PS1_SHOWDIRTYSTATE=1
		GIT_PS1_SHOWSTASHSTATE=1
		GIT_PS1_SHOWUNTRACKEDFILES=1
		GIT_PS1_SHOWUPSTREAM="verbose"
		GIT_PS1_DESCRIBE_STYLE="default"
		GIT_PS1_SHOWCOLORHINTS=1

		. /usr/local/etc/bash_completion.d/git-prompt.sh
		PS1+='$(__git_ps1)'

		# attempt to get coloring by using pc_mode and then restoring PS1
		# gets pretty ugly and doesn't work as ${__git_ps1_branch_name} isn't evaluated
		#PS1+='${GIT_PS1_PROMPT}'
		##GIT_PS1_PROMPT=' (\[\e[32m\]${__git_ps1_branch_name}\[\e[0m\] \[\e[31m\]*\[\e[31m\]%\[\e[0m\] u+1)'
		##GIT_PS1_PROMPT="${GIT_PS1_PROMPT//\\\[/}";
		##GIT_PS1_PROMPT="${GIT_PS1_PROMPT//\\\]/}";
		##GIT_PS1_PROMPT=$(echo -e "$GIT_PS1_PROMPT");
		#PROMPT_COMMAND='PS1_BAK="$PS1"; __git_ps1 "" ""; GIT_PS1_PROMPT="$PS1"; GIT_PS1_PROMPT="${GIT_PS1_PROMPT//\\\[/}"; GIT_PS1_PROMPT="${GIT_PS1_PROMPT//\\\]/}"; GIT_PS1_PROMPT=$(echo -e "$GIT_PS1_PROMPT"); PS1="$PS1_BAK"'
	fi

	# change color dep. on return val
	PS1+='\n$(if [[ $__retval = 0 ]]; then echo "'$blue'"; else echo "'$red'"; fi)\$'$reset' '
	PROMPT_COMMAND='__retval=$?; '"$PROMPT_COMMAND"  # is otherwise reset to 0 by __git_ps1

	#default:
	#PS1='${prompt_prefix}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$ \[\033[00m\]'

	unset reset black red green yellow blue violet cyan white checkmark crossmark
else
	PS1="${prompt_prefix}"'\u@\h:\w\$ '
fi
unset color_prompt prompt_prefix
